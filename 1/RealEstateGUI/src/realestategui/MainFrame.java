/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package realestategui;

import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.util.*;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;


/**
 *
 * @author tarodib.20d
 */
public class MainFrame extends javax.swing.JFrame {

    private JList<Seller> sellerList;
    private JLabel sellerNameLabel, sellerPhoneLabel, adsCountLabel;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        setTitle("Ingatlan Hirdetések");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        sellerList = new JList<>();
        sellerNameLabel = new JLabel("Eladó neve: ");
        sellerPhoneLabel = new JLabel("Eladó telefonszáma: ");
        adsCountLabel = new JLabel("Hirdetések száma: ");

        JButton loadButton = new JButton("Hirdetések betöltése");


        JPanel panel = new JPanel(new BorderLayout());

        JPanel infoPanel = new JPanel(new GridLayout(3, 1));
        infoPanel.add(sellerNameLabel);
        infoPanel.add(sellerPhoneLabel);
        infoPanel.add(adsCountLabel);

        panel.add(new JScrollPane(sellerList), BorderLayout.WEST);
        panel.add(infoPanel, BorderLayout.CENTER);
        panel.add(loadButton, BorderLayout.SOUTH);

        add(panel);
        loadButton.addActionListener(e -> loadAds());
        sellerList.addListSelectionListener(e -> updateSellerInfo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
        private void loadAds() {
        try {
            List<Ad> ads = loadFromCsv("realestates.csv");
            List<Seller> sellers = ads.stream()
                                      .map(Ad::getSeller)
                                      .distinct()
                                      .collect(Collectors.toList());
            sellerList.setListData(sellers.toArray(new Seller[0]));
            JOptionPane.showMessageDialog(this, "Adatok betöltve!");
            
            // Mentés az osztály szintjén
            sellerList.putClientProperty("ads", ads);
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Hiba történt az adatok betöltésekor: " + ex.getMessage());
            ex.printStackTrace();
        }
    }
    
    private void updateSellerInfo() {
        Seller selectedSeller = sellerList.getSelectedValue();
        
        if (selectedSeller != null) {
            List<Ad> ads = (List<Ad>) sellerList.getClientProperty("ads");
            long count = ads.stream()
                            .filter(ad -> ad.getSeller().equals(selectedSeller))
                            .count();
            
            sellerNameLabel.setText("Eladó neve: " + selectedSeller.toString());
            sellerPhoneLabel.setText("Eladó telefonszáma: " + selectedSeller.getPhone());
            adsCountLabel.setText("Hirdetések száma: " + count);
        }
    }
    
    private List<Ad> loadFromCsv(String fileName) throws IOException {
        List<Ad> ads = new ArrayList<>();

        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            String line;
            br.readLine(); // Fejléc kihagyása

            while ((line = br.readLine()) != null) {
                String[] values = line.split(";");

                int id = Integer.parseInt(values[0]);
                String description = values[5];
                int rooms = Integer.parseInt(values[1]);
                int area = Integer.parseInt(values[4]);
                int floors = Integer.parseInt(values[3]);
                boolean freeOfCharge = values[6].equals("1");
                String latLong = values[2];

                Seller seller = new Seller(Integer.parseInt(values[9]), values[10], values[11]);

                ads.add(new Ad(id, description, rooms, area, floors, freeOfCharge, latLong, seller));
            }

            return ads;
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
